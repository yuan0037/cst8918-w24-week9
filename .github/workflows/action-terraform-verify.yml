name: Validate terraform fmt
on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: terraform fmt check
    outputs:
      CHECK_STATUS: "${{ env.CHECK_STATUS }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Validate terraform fmt (added_modified)
        run: |
          set +e

          echo "CHECK_STATUS=0" >> $GITHUB_ENV

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            if [[ $changed_file == *.tf ]]; then
              echo "Checking terraform fmt on ${changed_file}..."
              terraform fmt -check $changed_file  > terraform_fmt_output.txt 2>&1 || true
              error_line=$(grep -i "Error:" terraform_fmt_output.txt || true)
              if [[ $error_line -ne 0 ]]; then
                echo "error_line: $error_line"
              else
                echo "no error for: $changed_file "
              fi
              
              if [ -n "$error_line" ]; then
                  FMT_STATUS=1
              else
                  FMT_STATUS=0
              fi              
              if [[ $FMT_STATUS -ne 0 ]]; then
                echo "❌ terraform fmt failed - ${changed_file}" >> $GITHUB_STEP_SUMMARY
                echo "CHECK_STATUS=1" >> $GITHUB_ENV
              else
                echo "✅ terraform fmt passed - ${changed_file}" >> $GITHUB_STEP_SUMMARY              
              fi             
            fi
          done

          echo "Validating Terraform script syntax..."
          terraform validate > terraform_validate_output.txt 2>&1 || true

          syntax_error=$(grep -i "Error:" terraform_validate_output.txt || true)
          echo "syntax_error: $syntax_error"
          if [ -n "$syntax_error" ]; then
              VALIDATE_STATUS=1
          else
              VALIDATE_STATUS=0
          fi
          if [[ $VALIDATE_STATUS -ne 0 ]]; then
            echo "❌ Terraform validation failed " >> $GITHUB_STEP_SUMMARY
            echo "CHECK_STATUS=1" >> $GITHUB_ENV
          else
            echo "✅ Terraform validation passed " >> $GITHUB_STEP_SUMMARY
          fi
      - name: Process check
        if: always()
        run: exit $CHECK_STATUS